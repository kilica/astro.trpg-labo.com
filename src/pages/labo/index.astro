---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import '../../styles/labo.css';

const laboEntries = await getCollection('labo');

// Group by category
const categories = {
  general: laboEntries.filter(entry => entry.data.category === 'general'),
  scenariomaking: laboEntries.filter(entry => entry.data.category === 'scenariomaking'),
  system: laboEntries.filter(entry => entry.data.category === 'system')
};

const categoryNames = {
  general: '全般',
  scenariomaking: 'シナリオ作成',
  system: 'システム'
};

// Function to build hierarchy
function buildHierarchy(entries) {
  const entryMap = new Map();
  const roots = [];
  
  // Create map of all entries
  entries.forEach(entry => {
    entryMap.set(entry.slug, { ...entry, children: [] });
  });
  
  // Build hierarchy
  entries.forEach(entry => {
    const item = entryMap.get(entry.slug);
    if (entry.data.parent) {
      const parent = entryMap.get(entry.data.parent);
      if (parent) {
        parent.children.push(item);
      } else {
        roots.push(item);
      }
    } else {
      roots.push(item);
    }
  });
  
  // Sort by order
  function sortByOrder(items) {
    items.sort((a, b) => a.data.order - b.data.order);
    items.forEach(item => sortByOrder(item.children));
  }
  
  sortByOrder(roots);
  return roots;
}
---

<Layout title="研究室 - TRPG研究室">
  <h1>研究室</h1>
  <p>TRPGに関する研究や情報をカテゴリ別にまとめています。</p>

  {Object.entries(categories).map(([categoryKey, entries]) => (
    entries.length > 0 && (
      <section class="category-section">
        <h2>{categoryNames[categoryKey]}</h2>
        <div class="hierarchy">
          {buildHierarchy(entries).map(entry => (
            <div class="entry-item">
              <h3>
                <a href={`/labo/${entry.slug}`}>{entry.data.title}</a>
              </h3>
              <div class="meta">
                <span class="date">{entry.data.publishedAt.toISOString().split('T')[0]}</span>
              </div>
              {entry.children.length > 0 && (
                <div class="children">
                  {entry.children.map(child => (
                    <div class="child-item">
                      <h4>
                        <a href={`/labo/${child.slug}`}>{child.data.title}</a>
                      </h4>
                      <div class="meta">
                        <span class="date">{child.data.publishedAt.toISOString().split('T')[0]}</span>
                      </div>
                    </div>
                  ))}
                </div>
              )}
            </div>
          ))}
        </div>
      </section>
    )
  ))}
</Layout>
