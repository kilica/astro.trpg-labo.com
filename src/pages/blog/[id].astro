---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import '../../styles/blog.css';

export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  return blogEntries.map(entry => ({
    params: { id: entry.slug },
    props: { entry }
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// Get all blog entries for sidebar
const allBlogEntries = await getCollection('blog');
const sortedEntries = allBlogEntries.sort((a, b) => b.data.publishedAt.getTime() - a.data.publishedAt.getTime());

// Recent 10 articles
const recentArticles = sortedEntries.slice(0, 10);

// Get unique years from publishedAt
const years = [...new Set(allBlogEntries.map(entry => entry.data.publishedAt.getFullYear()))].sort((a, b) => b - a);

const categoryNames = {
  general: '一般',
  game: 'ゲーム',
  dev: '開発',
  home: '家・インテリア',
  plants: '植物',
  travel: '旅行・グルメ',
  science: '科学・技術'
};
---

<Layout title={`${entry.data.title} - ブログ - TRPG研究室`}>
  <nav class="breadcrumb">
    <a href="/">ホーム</a> &gt; 
    <a href="/blog">ブログ</a> &gt; 
    <a href={`/blog/${entry.data.category}`}>{categoryNames[entry.data.category]}</a> &gt; 
    <span class="current">{entry.data.title}</span>
  </nav>

  <div class="layout-container">
    <!-- Left Sidebar -->
    <aside class="sidebar">
      <!-- Recent Articles -->
      <section class="sidebar-section">
        <h3>最近の記事</h3>
        <ul class="recent-articles">
          {recentArticles.map(article => (
            <li>
              <a href={`/blog/${article.slug}`}>
                <span class="article-date">{article.data.publishedAt.toISOString().split('T')[0]}</span>
                <span class="article-title">{article.data.title}</span>
              </a>
            </li>
          ))}
        </ul>
      </section>

      <!-- Categories -->
      <section class="sidebar-section">
        <h3>カテゴリ一覧</h3>
        <ul class="category-list">
          {Object.entries(categoryNames).map(([slug, name]) => (
            <li>
              <a href={`/blog/${slug}`}>{name}</a>
            </li>
          ))}
        </ul>
      </section>

      <!-- Year Archive -->
      <section class="sidebar-section">
        <h3>年別アーカイブ</h3>
        <ul class="year-list">
          {years.map(year => (
            <li>
              <a href={`/blog?year=${year}`}>{year}年</a>
            </li>
          ))}
        </ul>
      </section>
    </aside>

    <!-- Main Content -->
    <div class="main-content">
      <article>
        <header>
          <h1>{entry.data.title}</h1>
          <div class="meta">
            <span class="category">{categoryNames[entry.data.category]}</span>
            <span class="date">公開日: {entry.data.publishedAt.toISOString().split('T')[0]}</span>
          </div>
          {entry.data.tags.length > 0 && (
            <div class="tags">
              {entry.data.tags.map(tag => (
                <span class="tag">{tag}</span>
              ))}
            </div>
          )}
        </header>

        <div class="content">
          <Content />
        </div>
      </article>

      <nav class="back-link">
        <a href="/blog">← ブログ一覧に戻る</a>
      </nav>
    </div>
  </div></Layout>
</Layout>
