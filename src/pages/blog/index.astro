---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

const url = new URL(Astro.request.url);
const currentPage = parseInt(url.searchParams.get('page') || '1');
const itemsPerPage = 20;

const blogEntries = await getCollection('blog');
const sortedEntries = blogEntries.sort((a, b) => b.data.publishedAt.getTime() - a.data.publishedAt.getTime());

const totalPages = Math.ceil(sortedEntries.length / itemsPerPage);
const startIndex = (currentPage - 1) * itemsPerPage;
const endIndex = startIndex + itemsPerPage;
const currentEntries = sortedEntries.slice(startIndex, endIndex);

const categoryNames = {
  general: '一般',
  game: 'ゲーム',
  dev: '開発',
  home: '家・インテリア',
  plants: '植物',
  travel: '旅行・グルメ'
};
---

<Layout title="ブログ - TRPG研究室">
  <div class="mb-8">
    <h1 class="text-3xl font-bold text-90 mb-4">ブログ</h1>
    <p class="text-75">TRPGや日常に関する記事を投稿しています。</p>
  </div>

  <div class="card mb-8">
    <h3 class="text-lg font-semibold text-90 mb-4">カテゴリで絞り込み</h3>
    <div class="flex flex-wrap gap-3">
      <a href="/blog" class="btn-regular px-3 py-1 rounded text-sm">すべて</a>
      <a href="/blog/general" class="btn-plain px-3 py-1 rounded text-sm hover:bg-[var(--btn-plain-bg-hover)]">一般</a>
      <a href="/blog/game" class="btn-plain px-3 py-1 rounded text-sm hover:bg-[var(--btn-plain-bg-hover)]">ゲーム</a>
      <a href="/blog/dev" class="btn-plain px-3 py-1 rounded text-sm hover:bg-[var(--btn-plain-bg-hover)]">開発</a>
      <a href="/blog/home" class="btn-plain px-3 py-1 rounded text-sm hover:bg-[var(--btn-plain-bg-hover)]">家・インテリア</a>
      <a href="/blog/plants" class="btn-plain px-3 py-1 rounded text-sm hover:bg-[var(--btn-plain-bg-hover)]">植物</a>
      <a href="/blog/travel" class="btn-plain px-3 py-1 rounded text-sm hover:bg-[var(--btn-plain-bg-hover)]">旅行・グルメ</a>
    </div>
  </div>

  <div class="space-y-6">
    {currentEntries.map(entry => (
      <article class="card border-l-4 border-[var(--primary)]">
        <h2 class="text-xl font-semibold mb-3">
          <a href={`/blog/${entry.slug}`} class="link-underline text-90 hover:text-[var(--primary)]">
            {entry.data.title}
          </a>
        </h2>
        <div class="flex flex-wrap items-center gap-4 text-75 mb-4">
          <span class="category">{categoryNames[entry.data.category]}</span>
          <span class="text-50">{entry.data.publishedAt.toISOString().split('T')[0]}</span>
        </div>
        <div class="text-75 leading-relaxed mb-4">
          {entry.body.slice(0, 500)}...
        </div>
        {entry.data.tags.length > 0 && (
          <div class="flex flex-wrap gap-2">
            {entry.data.tags.map(tag => (
              <span class="bg-[var(--btn-regular-bg)] text-[var(--btn-content)] px-2 py-1 rounded text-sm">
                {tag}
              </span>
            ))}
          </div>
        )}
      </article>
    ))}
  </div>

  {totalPages > 1 && (
    <div class="pagination">
      {currentPage > 1 && (
        <a href={`/blog?page=${currentPage - 1}`}>← 前のページ</a>
      )}
      
      {Array.from({ length: totalPages }, (_, i) => i + 1).map(page => (
        page === currentPage ? (
          <span class="current">{page}</span>
        ) : (
          <a href={`/blog?page=${page}`}>{page}</a>
        )
      ))}
      
      {currentPage < totalPages && (
        <a href={`/blog?page=${currentPage + 1}`}>次のページ →</a>
      )}
    </div>
  )}
</Layout>
