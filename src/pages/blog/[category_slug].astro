---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import '../../styles/blog.css';

export async function getStaticPaths() {
  const categories = ['general', 'game', 'dev', 'home', 'plants', 'travel', 'science'];
  return categories.map(category => ({
    params: { category_slug: category }
  }));
}

const { category_slug } = Astro.params;

const url = new URL(Astro.request.url);
const currentPage = parseInt(url.searchParams.get('page') || '1');
const itemsPerPage = 20;

const blogEntries = await getCollection('blog');
const filteredEntries = blogEntries
  .filter(entry => entry.data.category === category_slug)
  .sort((a, b) => b.data.publishedAt.getTime() - a.data.publishedAt.getTime());

const totalPages = Math.ceil(filteredEntries.length / itemsPerPage);
const startIndex = (currentPage - 1) * itemsPerPage;
const endIndex = startIndex + itemsPerPage;
const currentEntries = filteredEntries.slice(startIndex, endIndex);

// Sidebar data
const sortedEntries = blogEntries.sort((a, b) => b.data.publishedAt.getTime() - a.data.publishedAt.getTime());
const recentArticles = sortedEntries.slice(0, 10);
const years = [...new Set(blogEntries.map(entry => entry.data.publishedAt.getFullYear()))].sort((a, b) => b - a);

const categoryNames = {
  general: '一般',
  game: 'ゲーム',
  dev: '開発',
  home: '家・インテリア',
  plants: '植物',
  travel: '旅行・グルメ',
  science: '科学・技術'
};

const currentCategoryName = categoryNames[category_slug];
---

<Layout title={`${currentCategoryName} - ブログ - TRPG研究室`}>
  <nav class="breadcrumb">
    <a href="/">ホーム</a> &gt; 
    <a href="/blog">ブログ</a> &gt; 
    <span class="current">{currentCategoryName}</span>
  </nav>

  <div class="layout-container">
    <!-- Left Sidebar -->
    <aside class="sidebar">
      <!-- Recent Articles -->
      <section class="sidebar-section">
        <h3>最近の記事</h3>
        <ul class="recent-articles">
          {recentArticles.map(article => (
            <li>
              <a href={`/blog/${article.slug}`}>
                <span class="article-date">{article.data.publishedAt.toISOString().split('T')[0]}</span>
                <span class="article-title">{article.data.title}</span>
              </a>
            </li>
          ))}
        </ul>
      </section>

      <!-- Categories -->
      <section class="sidebar-section">
        <h3>カテゴリ一覧</h3>
        <ul class="category-list">
          {Object.entries(categoryNames).map(([slug, name]) => (
            <li>
              <a href={`/blog/${slug}`} class={category_slug === slug ? 'active' : ''}>{name}</a>
            </li>
          ))}
        </ul>
      </section>

      <!-- Year Archive -->
      <section class="sidebar-section">
        <h3>年別アーカイブ</h3>
        <ul class="year-list">
          {years.map(year => (
            <li>
              <a href={`/blog?year=${year}`}>{year}年</a>
            </li>
          ))}
        </ul>
      </section>
    </aside>

    <!-- Main Content -->
    <div class="main-content">
      <h1>ブログ - {currentCategoryName}</h1>
      <p>{currentCategoryName}カテゴリの記事一覧です。</p>

      <div class="categories">
        <h3>カテゴリで絞り込み</h3>
        <ul>
          <li><a href="/blog">すべて</a></li>
          <li><a href="/blog/general" class={category_slug === 'general' ? 'active' : ''}>一般</a></li>
          <li><a href="/blog/game" class={category_slug === 'game' ? 'active' : ''}>ゲーム</a></li>
          <li><a href="/blog/dev" class={category_slug === 'dev' ? 'active' : ''}>開発</a></li>
          <li><a href="/blog/home" class={category_slug === 'home' ? 'active' : ''}>家・インテリア</a></li>
          <li><a href="/blog/plants" class={category_slug === 'plants' ? 'active' : ''}>植物</a></li>
          <li><a href="/blog/travel" class={category_slug === 'travel' ? 'active' : ''}>旅行・グルメ</a></li>
          <li><a href="/blog/science" class={category_slug === 'science' ? 'active' : ''}>科学・技術</a></li>
        </ul>
      </div>

      <div class="blog-list">
        {currentEntries.map(entry => (
          <article class="blog-item">
            <h2>
              <a href={`/blog/${entry.slug}`}>{entry.data.title}</a>
            </h2>
            <div class="meta">
              <span class="category">{categoryNames[entry.data.category]}</span>
              <span class="date">{entry.data.publishedAt.toISOString().split('T')[0]}</span>
            </div>
            <div class="excerpt">
              {entry.body.slice(0, 500)}...
            </div>
            {entry.data.tags.length > 0 && (
              <div class="tags">
                {entry.data.tags.map(tag => (
                  <span class="tag">{tag}</span>
                ))}
              </div>
            )}
          </article>
        ))}
      </div>

      {currentEntries.length === 0 && (
        <div class="no-posts">
          <p>このカテゴリにはまだ記事がありません。</p>
        </div>
      )}

      {totalPages > 1 && (
        <div class="pagination">
          {currentPage > 1 && (
            <a href={`/blog/${category_slug}?page=${currentPage - 1}`}>← 前のページ</a>
          )}
          
          {Array.from({ length: totalPages }, (_, i) => i + 1).map(page => (
            page === currentPage ? (
              <span class="current">{page}</span>
            ) : (
              <a href={`/blog/${category_slug}?page=${page}`}>{page}</a>
            )
          ))}
          
          {currentPage < totalPages && (
            <a href={`/blog/${category_slug}?page=${currentPage + 1}`}>次のページ →</a>
          )}
        </div>
      )}
    </div>
  </div></Layout>
</Layout>
